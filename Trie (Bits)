#include<bits/stdc++.h>
struct Node {
    Node* links[2];
    bool contains(int bit){
        return links[bit] != NULL;
    }
    void put(int bit){
        links[bit] = new Node();
    }
    Node* get(int bit){
        return links[bit];
    }
};

class Trie {
    Node* root;
public:
    Trie(){
        root = new Node();
    }
    
    void insert(int num){
        Node* node = root;
        for(int i=31;i>=0;i--){
            int bit = (num >> i) & 1;
            if(!node->contains(bit))
                node->put(bit);
            node = node->get(bit);
        }
    }

    int getmax(int num){
        Node* node = root;
        int maxNum = 0;
        for(int i=31;i>=0;i--){
            int bit = (num >> i) & 1;
            if (node->contains(1 - bit)) {
                maxNum = maxNum | (1 << i);
                node = node->get(1-bit);
            }
            else
                node = node->get(bit);
        }
        return maxNum;
    }   
};
